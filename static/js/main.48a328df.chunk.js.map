{"version":3,"sources":["components/Person.js","components/TableHeader.js","components/PeopleTable.js","components/NewPerson.js","API_DATA.js","App.js","index.js"],"names":["classNames","require","Person","props","people","handlePersonRowClick","personRowSelectedId","personRowSelected","getChildrenString","person","peopleArr","filter","child","father","name","mother","map","join","getClassByBornAndDied","born-before-1650","born","died-after-1800","died","getClassByChildSexSelected","person--selected","id","person--female","sex","person--mother","children","person--male","person--father","personData","personIndex","react_default","a","createElement","key","className","onClick","age","concat","century","TableHeader","handleSort","PeopleTable","src_components_TableHeader","src_components_Person","NewPerson","state","handleNewPerson","event","target","value","replace","_this","setState","Object","defineProperty","getParrents","parentSex","childBorn","parent","_this$props","this","handleNewPersonSubmit","_this$state","optionsOfFathers","optionsOfMathers","onSubmit","type","placeholder","maxLength","onChange","required","htmlFor","minLength","React","Component","peoplePromice","fetch","then","response","json","App","peopleFromServer","filterInputValue","toggleNameSortOrder","errorMessage","addKeysToPersonInArr","objectSpread","getCentury","Math","ceil","isArrIncludeSubstr","str","substr","trim","toLowerCase","includes","handleFilterInput","prevState","item","returnSortingFunction","arr","sortKey","toggleSortOrder","b","localeCompare","fieldName","toConsumableArray","sort","personId","preventDefault","newPersonObj","checked","temp","length","components_NewPerson","src_components_PeopleTable","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.48a328df.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Person.css';\n\nconst classNames = require('classnames');\n\nconst Person = (props) => {\n  const {\n    people, handlePersonRowClick, personRowSelectedId, personRowSelected,\n  } = props;\n\n  const getChildrenString = (person, peopleArr) => (peopleArr\n    .filter(child => child.father === person.name\n      || child.mother === person.name)\n    .map(child => child.name)\n    .join(', ')\n  );\n\n  const getClassByBornAndDied = person => (\n    classNames({\n      'born-before-1650': person.born < 1650,\n      'died-after-1800': person.died > 1800,\n    })\n  );\n\n  const getClassByChildSexSelected = (person, peopleArr) => (\n    classNames({\n      person: true,\n      'person--selected': person.id === personRowSelectedId\n        && personRowSelected,\n      'person--female': person.sex === 'f',\n      'person--mother': person.children !== '' && person.sex === 'f',\n      'person--male': person.sex === 'm',\n      'person--father': getChildrenString(person, peopleArr)\n        && person.sex === 'm',\n    })\n  );\n\n  const personData = people.map((person, personIndex, peopleArr) => (\n    <tr\n      key={person.id + person.name}\n      className={getClassByChildSexSelected(person, peopleArr)}\n      onClick={() => handlePersonRowClick(person.id)}\n    >\n      <td>{person.id}</td>\n      <td className={getClassByBornAndDied(person)}>\n        {person.name}\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.father}</td>\n      <td>{person.mother}</td>\n      <td className={person.age > 65 ? 'long-life' : 'so-short-life'}>\n        {person.age}\n      </td>\n      <td className={`person--lived-in-${person.century}`}>{person.century}</td>\n      <td>{person.children}</td>\n    </tr>\n  ));\n\n  return (\n    <tbody>\n      {personData}\n    </tbody>\n  );\n};\n\nPerson.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handlePersonRowClick: PropTypes.func.isRequired,\n  personRowSelected: PropTypes.bool.isRequired,\n  personRowSelectedId: PropTypes.number.isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TableHeader.css';\n\nconst TableHeader = props => (\n  <thead>\n    <tr>\n      <th\n        onClick={() => props.handleSort('id')}\n        className=\"sorting--cell\"\n      >\nid\n      </th>\n      <th\n        onClick={() => props.handleSort('name')}\n        className=\"sorting--cell\"\n      >\nname\n      </th>\n      <th>sex</th>\n      <th\n        onClick={() => props.handleSort('born')}\n        className=\"sorting--cell\"\n      >\nborn\n      </th>\n      <th\n        onClick={() => props.handleSort('died')}\n        className=\"sorting--cell\"\n      >\ndied\n      </th>\n      <th>father</th>\n      <th>mother</th>\n      <th\n        onClick={() => props.handleSort('age')}\n        className=\"sorting--cell\"\n      >\nage\n      </th>\n      <th>century</th>\n      <th>children</th>\n    </tr>\n  </thead>\n);\n\nTableHeader.propTypes = {\n  handleSort: PropTypes.func.isRequired,\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Person from './Person';\nimport TableHeader from './TableHeader';\nimport './PeopleTable.css';\n\nconst PeopleTable = props => (\n  <table className=\"PeopleTable\">\n    <TableHeader handleSort={props.handleSort} />\n    <Person\n      people={props.people}\n      handlePersonRowClick={props.handlePersonRowClick}\n      personRowSelectedId={props.personRowSelectedId}\n      personRowSelected={props.personRowSelected}\n    />\n  </table>\n);\n\nPeopleTable.propTypes = {\n  handleSort: PropTypes.func.isRequired,\n  handlePersonRowClick: PropTypes.func.isRequired,\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  personRowSelectedId: PropTypes.number.isRequired,\n  personRowSelected: PropTypes.bool.isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewPerson extends React.Component {\n  state={\n    name: '',\n    sex: false,\n    born: '',\n    died: '',\n    mother: '',\n    father: '',\n  }\n\n  handleNewPerson = (event) => {\n    const { name } = event.target;\n    let { value } = event.target;\n\n    switch (name) {\n      case 'name':\n      case 'mother':\n      case 'father':\n        value = value.replace(/[^A-Za-z ]/, '');\n        break;\n\n      case 'born':\n        this.setState({\n          father: '',\n          mother: '',\n        });\n\n        value = value.replace(/\\D/g, '');\n        break;\n\n      default:\n        value = value.replace(/\\D/g, '');\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  getParrents = (parentSex, people, childBorn) => people\n    .filter(parent => (\n      parent.sex === parentSex && parent.born < childBorn))\n    .map(parent => (\n      <option\n        key={parent.id + parent.name}\n        value={parent.name}\n      >\n        {parent.name}\n      </option>\n    ))\n\n  render() {\n    const { people, handleNewPersonSubmit } = this.props;\n    const {\n      name, sex, born, died, father, mother,\n    } = this.state;\n    const optionsOfFathers = this.getParrents('m', people, born);\n    const optionsOfMathers = this.getParrents('f', people, born);\n\n    return (\n      <div>\n        <form onSubmit={handleNewPersonSubmit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"name\"\n            maxLength=\"60\"\n            value={name}\n            onChange={this.handleNewPerson}\n            required\n          />\n\n          <label htmlFor=\"femaleRadio\">\n            <input\n              name=\"sex\"\n              type=\"radio\"\n              value=\"f\"\n              required\n              onChange={this.handleNewPerson}\n              id=\"femaleRadio\"\n            />\n              Female\n          </label>\n\n          <label htmlFor=\"maleRadio\">\n            <input\n              name=\"sex\"\n              type=\"radio\"\n              value=\"m\"\n              required\n              onChange={this.handleNewPerson}\n              id=\"maleRadio\"\n            />\n            Male\n          </label>\n\n          <input\n            name=\"born\"\n            type=\"text\"\n            placeholder=\"born year\"\n            maxLength=\"4\"\n            minLength=\"4\"\n            required\n            value={born}\n            onChange={this.handleNewPerson}\n          />\n\n          <input\n            name=\"died\"\n            type=\"text\"\n            placeholder=\"died year\"\n            maxLength=\"4\"\n            minLength=\"4\"\n            required\n            value={died}\n            onChange={this.handleNewPerson}\n          />\n\n          <input\n            name=\"father\"\n            type=\"text\"\n            placeholder=\"father\"\n            required\n            value={father}\n            onChange={this.handleNewPerson}\n          />\n\n          <select\n            name=\"father\"\n            value={father}\n            onChange={this.handleNewPerson}\n          >\n            {optionsOfFathers}\n          </select>\n\n          <input\n            name=\"mother\"\n            type=\"text\"\n            placeholder=\"mother\"\n            value={mother}\n            required\n            onChange={this.handleNewPerson}\n          />\n\n          <select\n            name=\"mother\"\n            value={mother}\n            onChange={this.handleNewPerson}\n          >\n            {optionsOfMathers}\n          </select>\n\n          <button type=\"submit\">Add New Person</button>\n        </form>\n\n        <p>\n          Name:\n          {name}\n          {' '}\n\n        </p>\n        <p>\n          Sex:\n          {sex}\n        </p>\n        <p>\n          Born:\n          {born}\n        </p>\n        <p>\n          Died:\n          {died}\n        </p>\n        <p>\n          Father:\n          {father}\n        </p>\n        <p>\n          Mother:\n          {mother}\n        </p>\n      </div>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  handleNewPersonSubmit: PropTypes.func.isRequired,\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default NewPerson;\n","const peoplePromice = () => fetch(\n  'https://mate-academy.github.io/react_people-table/api/people.json'\n)\n  .then(response => response.json());\n\nexport default peoplePromice;\n","import React from 'react';\nimport './PeopleTable.css';\nimport PeopleTable from './components/PeopleTable';\nimport NewPerson from './components/NewPerson';\nimport peoplePromice from './API_DATA';\n\nclass App extends React.Component {\n  state={\n    peopleFromServer: [],\n    people: [],\n    filterInputValue: '',\n    toggleNameSortOrder: 1,\n    personRowSelected: false,\n    personRowSelectedId: 0,\n    errorMessage: '',\n  }\n\n  async componentDidMount() {\n    const peopleFromServer = await peoplePromice();\n\n    const temp = this.addKeysToPersonInArr(peopleFromServer);\n\n    this.setState({\n      peopleFromServer: temp,\n      people: temp,\n    });\n  }\n\n  addKeysToPersonInArr = people => people\n    .map((person, personIndex, peopleArr) => ({\n      ...person,\n      id: personIndex + 1,\n      age: person.died - person.born,\n      century: this.getCentury(person.died),\n      children: this.getChildrenString(person, peopleArr),\n    }))\n\n  getCentury = died => (\n    Math.ceil(died / 100)\n  )\n\n  getChildrenString = (person, peopleArr) => (peopleArr\n    .filter(child => child.father === person.name\n      || child.mother === person.name)\n    .map(child => child.name)\n    .join(', ')\n  )\n\n  isArrIncludeSubstr = (str, substr) => {\n    str = str.join('');\n    substr = substr.trim();\n\n    if (str) {\n      return str.toLowerCase().includes(substr.toLowerCase());\n    }\n    return false;\n  }\n\n  handleFilterInput = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      filterInputValue: value,\n    });\n\n    this.setState(prevState => ({\n      people: prevState.peopleFromServer.filter(item => (\n        this.isArrIncludeSubstr(\n          [item.name, item.mother, item.father], prevState.filterInputValue\n        )\n      )),\n    }));\n  }\n\n  returnSortingFunction = (arr, sortKey, toggleSortOrder) => {\n    switch (typeof arr[0][sortKey]) {\n      case 'string':\n        return (a, b) => toggleSortOrder * a[sortKey].localeCompare(b[sortKey]);\n\n      case 'number':\n        return (a, b) => toggleSortOrder * (a[sortKey] - b[sortKey]);\n\n      default:\n        return 0;\n    }\n  }\n\n  handleSort = (fieldName) => {\n    this.setState(prevState => ({\n      people: [...prevState.peopleFromServer]\n        .sort(this.returnSortingFunction(\n          [...prevState.peopleFromServer],\n          fieldName, prevState.toggleNameSortOrder\n        )),\n      toggleNameSortOrder: -prevState.toggleNameSortOrder,\n    }));\n  }\n\n  handlePersonRowClick = (personId) => {\n    this.setState({\n      personRowSelectedId: personId,\n    });\n\n    if (this.state.personRowSelectedId === personId) {\n      this.setState(prevState => ({\n        personRowSelected: !prevState.personRowSelected,\n      }));\n    } else if (this.state.personRowSelectedId !== personId) {\n      this.setState({\n        personRowSelected: true,\n      });\n    }\n  }\n\n  handleNewPersonSubmit = (event) => {\n    event.preventDefault();\n\n    const newPersonObj = {\n      name: event.target[0].value,\n      sex: event.target[1].checked ? 'f' : 'm',\n      born: event.target[3].value,\n      died: event.target[4].value,\n      mother: event.target[5].value,\n      father: event.target[6].value,\n    };\n\n    const age = newPersonObj.died - newPersonObj.born;\n\n    if (age <= 0 || age > 150) {\n      this.setState({\n        errorMessage: 'Incorrect Age, or to much or not enough',\n      });\n    } else {\n      this.setState(prevState => ({\n        errorMessage: '',\n        peopleFromServer:\n          this.addKeysToPersonInArr(\n            [...prevState.peopleFromServer, newPersonObj]\n          ),\n        people:\n          this.addKeysToPersonInArr([...prevState.people, newPersonObj]),\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          People table\n          {this.state.people.length}\n        </h1>\n        <h2 className=\"error-message\">{this.state.errorMessage}</h2>\n\n        <NewPerson\n          handleNewPersonSubmit={this.handleNewPersonSubmit}\n          people={this.state.people}\n        />\n\n        <input\n          type=\"text\"\n          placeholder=\"Filter by Name, Mother of Father\"\n          value={this.state.filterInputValue}\n          onChange={this.handleFilterInput}\n        />\n\n        <PeopleTable\n          people={this.state.people}\n          handleSort={this.handleSort}\n          handlePersonRowClick={this.handlePersonRowClick}\n          personRowSelectedId={this.state.personRowSelectedId}\n          personRowSelected={this.state.personRowSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}