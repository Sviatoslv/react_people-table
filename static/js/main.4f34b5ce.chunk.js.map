{"version":3,"sources":["components/Person.js","components/TableHeader.js","components/PeopleTable.js","components/NewPerson.js","API_DATA.js","App.js","index.js"],"names":["classNames","require","Person","props","people","handlePersonRowClick","personRowSelectedId","personRowSelected","getChildrenString","person","peopleArr","filter","child","father","name","mother","map","join","getClassByBornAndDied","born-before-1650","born","died-after-1800","died","getClassByChildSexSelected","person--selected","id","person--female","sex","person--mother","children","person--male","person--father","personData","personIndex","react_default","a","createElement","key","className","onClick","age","concat","century","TableHeader","handleSort","PeopleTable","components_TableHeader","src_components_Person","NewPerson","state","handleNewPerson","event","_event$target","target","value","_this","setState","Object","defineProperty","onSubmit","this","handleNewPersonSubmit","type","placeholder","onChange","required","htmlFor","pattern","minLength","maxLength","React","Component","peoplePromice","fetch","then","response","json","App","peopleFromServer","filterInputValue","toggleNameSortOrder","addKeysToPersonInArr","objectSpread","getCentury","Math","ceil","handleFilterInput","isStrIncludeSubstr","str","substr","toLowerCase","includes","handleSubmit","preventDefault","prevState","item","returnSortingFunction","arr","sortKey","toggleSortOrder","console","log","b","localeCompare","fieldName","toConsumableArray","sort","personId","newPersonObj","checked","temp","length","components_NewPerson","src_components_PeopleTable","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.4f34b5ce.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Person.css';\n\nconst classNames = require('classnames');\n\nconst Person = (props) => {\n  const {\n    people, handlePersonRowClick, personRowSelectedId, personRowSelected,\n  } = props;\n\n  const getChildrenString = (person, peopleArr) => (peopleArr\n    .filter(child => child.father === person.name\n      || child.mother === person.name)\n    .map(child => child.name)\n    .join(', ')\n  );\n\n  const getClassByBornAndDied = person => (\n    classNames({\n      'born-before-1650': person.born < 1650,\n      'died-after-1800': person.died > 1800,\n    })\n  );\n\n  const getClassByChildSexSelected = (person, peopleArr) => (\n    classNames({\n      person: true,\n      'person--selected': person.id === personRowSelectedId\n        && personRowSelected,\n      'person--female': person.sex === 'f',\n      'person--mother': person.children !== '' && person.sex === 'f',\n      'person--male': person.sex === 'm',\n      'person--father': getChildrenString(person, peopleArr)\n        && person.sex === 'm',\n    })\n  );\n\n  const personData = people.map((person, personIndex, peopleArr) => (\n    <tr\n      key={person.id + person.name}\n      className={getClassByChildSexSelected(person, peopleArr)}\n      onClick={() => handlePersonRowClick(person.id)}\n    >\n      <td>{person.id}</td>\n      <td className={getClassByBornAndDied(person)}>\n        {person.name}\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.father}</td>\n      <td>{person.mother}</td>\n      <td className={person.age > 65 ? 'longLife' : 'ohSoShortLife'}>\n        {person.age}\n      </td>\n      <td className={`person--lived-in-${person.century}`}>{person.century}</td>\n      <td>{person.children}</td>\n    </tr>\n  ));\n\n  return (\n    <tbody>\n      {personData}\n    </tbody>\n  );\n};\n\nPerson.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handlePersonRowClick: PropTypes.func.isRequired,\n  personRowSelected: PropTypes.bool.isRequired,\n  personRowSelectedId: PropTypes.string.isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableHeader = props => (\n  <thead>\n    <tr>\n      <th onClick={() => props.handleSort('id')}>id</th>\n      <th onClick={() => props.handleSort('name')}>name</th>\n      <th>sex</th>\n      <th onClick={() => props.handleSort('born')}>born</th>\n      <th onClick={() => props.handleSort('died')}>died</th>\n      <th>father</th>\n      <th>mother</th>\n      <th onClick={() => props.handleSort('age')}>age</th>\n      <th>century</th>\n      <th>children</th>\n    </tr>\n  </thead>\n);\n\nTableHeader.propTypes = {\n  handleSort: PropTypes.func.isRequired,\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Person from './Person';\nimport TableHeader from './TableHeader';\nimport './PeopleTable.css';\n\nconst PeopleTable = props => (\n  <table className=\"PeopleTable\">\n    <TableHeader handleSort={props.handleSort} />\n    <Person\n      people={props.people}\n      handlePersonRowClick={props.handlePersonRowClick}\n      personRowSelectedId={props.personRowSelectedId}\n      personRowSelected={props.personRowSelected}\n    />\n  </table>\n);\n\nPeopleTable.propTypes = {\n  handleSort: PropTypes.func.isRequired,\n  handlePersonRowClick: PropTypes.func.isRequired,\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  personRowSelectedId: PropTypes.string.isRequired,\n  personRowSelected: PropTypes.bool.isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewPerson extends React.Component {\n  state={\n    name: '',\n    sex: false,\n    born: '',\n    died: '',\n    mother: '',\n    father: '',\n  }\n\n  handleNewPerson = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.props.handleNewPersonSubmit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"name\"\n            value={this.state.name}\n            onChange={this.handleNewPerson}\n            required\n          />\n\n          <label htmlFor=\"femaleRadio\">\n            <input\n              name=\"sex\"\n              type=\"radio\"\n              value=\"f\"\n              required\n              onChange={this.handleNewPerson}\n              id=\"femaleRadio\"\n            />\n              Female\n          </label>\n\n          <label htmlFor=\"maleRadio\">\n            <input\n              name=\"sex\"\n              type=\"radio\"\n              value=\"m\"\n              required\n              onChange={this.handleNewPerson}\n              id=\"maleRadio\"\n            />\n            Male\n          </label>\n\n          <input\n            name=\"born\"\n            type=\"type\"\n            pattern=\"[0-9]{4}\"\n            placeholder=\"born year\"\n            required\n            minLength=\"4\"\n            maxLength=\"4\"\n            onChange={this.handleNewPerson}\n          />\n\n          <input\n            name=\"died\"\n            type=\"type\"\n            pattern=\"[0-9]{4}\"\n            placeholder=\"died\"\n            required\n            minLength=\"4\"\n            maxLength=\"4\"\n            onChange={this.handleNewPerson}\n          />\n\n          <input\n            name=\"father\"\n            type=\"text\"\n            placeholder=\"father\"\n            required\n            onChange={this.handleNewPerson}\n          />\n\n          <input\n            name=\"mother\"\n            type=\"text\"\n            placeholder=\"mother\"\n            required\n            onChange={this.handleNewPerson}\n          />\n          <button type=\"submit\">Add New Person</button>\n        </form>\n\n        <p>\nName\n          {this.state.name}\n          {' '}\n\n        </p>\n        <p>\nSex:\n          {this.state.sex}\n        </p>\n        <p>\nBorn:\n          {this.state.born}\n        </p>\n        <p>\ndied:\n          {this.state.died}\n        </p>\n        <p>\nfather:\n          {this.state.father}\n        </p>\n        <p>\nmother:\n          {this.state.mother}\n        </p>\n\n      </div>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  handleNewPersonSubmit: PropTypes.func.isRequired,\n};\n\nexport default NewPerson;\n","const peoplePromice = () => fetch(\n  'https://mate-academy.github.io/react_people-table/api/people.json'\n)\n  .then(response => response.json());\n\nexport default peoplePromice;\n","import React from 'react';\nimport './PeopleTable.css';\nimport PeopleTable from './components/PeopleTable';\nimport NewPerson from './components/NewPerson';\nimport peoplePromice from './API_DATA';\n\nclass App extends React.Component {\n  state={\n    peopleFromServer: [],\n    people: [],\n    filterInputValue: '',\n    toggleNameSortOrder: 1,\n    personRowSelected: false,\n    personRowSelectedId: '',\n  }\n\n  async componentDidMount() {\n    const peopleFromServer = await peoplePromice();\n\n    const temp = this.addKeysToPersonInArr(peopleFromServer);\n\n    this.setState({\n      peopleFromServer: temp,\n      people: temp,\n    });\n  }\n\n  addKeysToPersonInArr = people => people\n    .map((person, personIndex, peopleArr) => ({\n      ...person,\n      id: personIndex + 1,\n      age: person.died - person.born,\n      century: this.getCentury(person.died),\n      children: this.getChildrenString(person, peopleArr),\n    }))\n\n  getCentury = died => (\n    Math.ceil(died / 100)\n  )\n\n  getChildrenString = (person, peopleArr) => (peopleArr\n    .filter(child => child.father === person.name\n      || child.mother === person.name)\n    .map(child => child.name)\n    .join(', ')\n  )\n\n  handleFilterInput = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      filterInputValue: value,\n    });\n  }\n\n  isStrIncludeSubstr = (str, substr) => {\n    if (str) {\n      return str.toLowerCase().includes(substr.toLowerCase());\n    }\n    return false;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState(prevState => ({\n      people: prevState.peopleFromServer.filter(item => (\n        this.isStrIncludeSubstr(item.name, prevState.filterInputValue)\n        || this.isStrIncludeSubstr(item.mother, prevState.filterInputValue)\n        || this.isStrIncludeSubstr(item.father, prevState.filterInputValue)\n      )),\n    }));\n  }\n\n  returnSortingFunction = (arr, sortKey, toggleSortOrder) => {\n    switch (typeof arr[0][sortKey]) {\n      case 'string':\n        console.log([sortKey], 'bugaga');\n        return (a, b) => toggleSortOrder * a[sortKey].localeCompare(b[sortKey]);\n\n      case 'number':\n        console.log(arr[0][sortKey], 'muahaha');\n        return (a, b) => toggleSortOrder * (a[sortKey] - b[sortKey]);\n\n      default:\n        return 0;\n    }\n  }\n\n  handleSort = (fieldName) => {\n    this.setState(prevState => ({\n      people: [...prevState.peopleFromServer]\n        .sort(this.returnSortingFunction(\n          [...prevState.peopleFromServer],\n          fieldName, prevState.toggleNameSortOrder\n        )),\n      toggleNameSortOrder: -prevState.toggleNameSortOrder,\n    }));\n  }\n\n  handlePersonRowClick = (personId) => {\n    this.setState({\n      personRowSelectedId: personId,\n    });\n\n    this.setState(prevState => ({\n      personRowSelected: !prevState.personRowSelected,\n    }));\n  }\n\n  handleNewPersonSubmit = (event) => {\n    const newPersonObj = {\n      name: event.target[0].value,\n      sex: event.target[1].checked ? 'f' : 'm',\n      born: event.target[3].value,\n      died: event.target[4].value,\n      mother: event.target[5].value,\n      father: event.target[6].value,\n    };\n\n    this.setState(prevState => ({\n      peopleFromServer:\n        this.addKeysToPersonInArr(\n          [...prevState.peopleFromServer, newPersonObj]\n        ),\n      people:\n        this.addKeysToPersonInArr([...prevState.people, newPersonObj]),\n    }));\n\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\nPeople table\n          {this.state.people.length}\n        </h1>\n\n        <NewPerson handleNewPersonSubmit={this.handleNewPersonSubmit} />\n\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Filter by Name, Mother of Father\"\n            value={this.state.filterInputValue}\n            onChange={this.handleFilterInput}\n          />\n\n          <button type=\"submit\" className=\"button\">Filter</button>\n        </form>\n        <PeopleTable\n          people={this.state.people}\n          handleSort={this.handleSort}\n          handlePersonRowClick={this.handlePersonRowClick}\n          personRowSelectedId={this.state.personRowSelectedId}\n          personRowSelected={this.state.personRowSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}