{"version":3,"sources":["components/Person.js","components/TableHeader.js","components/PeopleTable.js","components/NewPerson.js","API_DATA.js","App.js","index.js"],"names":["classNames","require","Person","props","people","handlePersonRowClick","personRowSelectedId","personRowSelected","getChildrenString","person","peopleArr","filter","child","father","name","mother","map","join","getClassByBornAndDied","born-before-1650","born","died-after-1800","died","getClassByChildSexSelected","person--selected","id","person--female","sex","person--mother","children","person--male","person--father","personData","personIndex","react_default","a","createElement","key","className","onClick","age","concat","century","TableHeader","handleSort","PeopleTable","components_TableHeader","src_components_Person","NewPerson","state","handleNewPerson","event","target","value","replace","_this","setState","Object","defineProperty","getParrents","parentSex","childBorn","parent","this","optionsOfFathers","optionsOfMathers","onSubmit","handleNewPersonSubmit","type","placeholder","onChange","required","htmlFor","pattern","React","Component","peoplePromice","fetch","then","response","json","App","peopleFromServer","filterInputValue","toggleNameSortOrder","errorMessage","addKeysToPersonInArr","objectSpread","getCentury","Math","ceil","handleFilterInput","isArrIncludeSubstr","str","substr","trim","toLowerCase","includes","handleSubmit","preventDefault","prevState","item","returnSortingFunction","arr","sortKey","toggleSortOrder","console","log","b","localeCompare","fieldName","toConsumableArray","sort","personId","newPersonObj","checked","temp","length","components_NewPerson","src_components_PeopleTable","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.0fb9be18.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Person.css';\n\nconst classNames = require('classnames');\n\nconst Person = (props) => {\n  const {\n    people, handlePersonRowClick, personRowSelectedId, personRowSelected,\n  } = props;\n\n  const getChildrenString = (person, peopleArr) => (peopleArr\n    .filter(child => child.father === person.name\n      || child.mother === person.name)\n    .map(child => child.name)\n    .join(', ')\n  );\n\n  const getClassByBornAndDied = person => (\n    classNames({\n      'born-before-1650': person.born < 1650,\n      'died-after-1800': person.died > 1800,\n    })\n  );\n\n  const getClassByChildSexSelected = (person, peopleArr) => (\n    classNames({\n      person: true,\n      'person--selected': person.id === personRowSelectedId\n        && personRowSelected,\n      'person--female': person.sex === 'f',\n      'person--mother': person.children !== '' && person.sex === 'f',\n      'person--male': person.sex === 'm',\n      'person--father': getChildrenString(person, peopleArr)\n        && person.sex === 'm',\n    })\n  );\n\n  const personData = people.map((person, personIndex, peopleArr) => (\n    <tr\n      key={person.id + person.name}\n      className={getClassByChildSexSelected(person, peopleArr)}\n      onClick={() => handlePersonRowClick(person.id)}\n    >\n      <td>{person.id}</td>\n      <td className={getClassByBornAndDied(person)}>\n        {person.name}\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.father}</td>\n      <td>{person.mother}</td>\n      <td className={person.age > 65 ? 'longLife' : 'ohSoShortLife'}>\n        {person.age}\n      </td>\n      <td className={`person--lived-in-${person.century}`}>{person.century}</td>\n      <td>{person.children}</td>\n    </tr>\n  ));\n\n  return (\n    <tbody>\n      {personData}\n    </tbody>\n  );\n};\n\nPerson.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  handlePersonRowClick: PropTypes.func.isRequired,\n  personRowSelected: PropTypes.bool.isRequired,\n  personRowSelectedId: PropTypes.number.isRequired,\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableHeader = props => (\n  <thead>\n    <tr>\n      <th onClick={() => props.handleSort('id')}>id</th>\n      <th onClick={() => props.handleSort('name')}>name</th>\n      <th>sex</th>\n      <th onClick={() => props.handleSort('born')}>born</th>\n      <th onClick={() => props.handleSort('died')}>died</th>\n      <th>father</th>\n      <th>mother</th>\n      <th onClick={() => props.handleSort('age')}>age</th>\n      <th>century</th>\n      <th>children</th>\n    </tr>\n  </thead>\n);\n\nTableHeader.propTypes = {\n  handleSort: PropTypes.func.isRequired,\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Person from './Person';\nimport TableHeader from './TableHeader';\nimport './PeopleTable.css';\n\nconst PeopleTable = props => (\n  <table className=\"PeopleTable\">\n    <TableHeader handleSort={props.handleSort} />\n    <Person\n      people={props.people}\n      handlePersonRowClick={props.handlePersonRowClick}\n      personRowSelectedId={props.personRowSelectedId}\n      personRowSelected={props.personRowSelected}\n    />\n  </table>\n);\n\nPeopleTable.propTypes = {\n  handleSort: PropTypes.func.isRequired,\n  handlePersonRowClick: PropTypes.func.isRequired,\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n  personRowSelectedId: PropTypes.number.isRequired,\n  personRowSelected: PropTypes.bool.isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass NewPerson extends React.Component {\n  state={\n    name: '',\n    sex: false,\n    born: '',\n    died: '',\n    mother: '',\n    father: '',\n  }\n\n  handleNewPerson = (event) => {\n    const { name } = event.target;\n    let { value } = event.target;\n\n    if (name === 'name') {\n      value = value.replace(/[^A-Za-z ]/, '');\n    }\n\n    if (name === 'born' && name === 'died') {\n      value = value.replace(/[^0-9]/, '');\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  getParrents = (parentSex, people, childBorn) => people\n    .filter(parent => (\n      parent.sex === parentSex && parent.born < childBorn))\n    .map(parent => (\n      <option\n        key={parent.id + parent.name}\n        value={parent.name}\n      >\n        {parent.name}\n      </option>\n    ))\n\n  render() {\n    const { people } = this.props;\n    const { born } = this.state;\n    const optionsOfFathers = this.getParrents('m', people, born);\n    const optionsOfMathers = this.getParrents('f', people, born);\n\n    return (\n      <div>\n        <form onSubmit={this.props.handleNewPersonSubmit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"name\"\n            value={this.state.name}\n            onChange={this.handleNewPerson}\n            required\n          />\n\n          <label htmlFor=\"femaleRadio\">\n            <input\n              name=\"sex\"\n              type=\"radio\"\n              value=\"f\"\n              required\n              onChange={this.handleNewPerson}\n              id=\"femaleRadio\"\n            />\n              Female\n          </label>\n\n          <label htmlFor=\"maleRadio\">\n            <input\n              name=\"sex\"\n              type=\"radio\"\n              value=\"m\"\n              required\n              onChange={this.handleNewPerson}\n              id=\"maleRadio\"\n            />\n            Male\n          </label>\n\n          <input\n            name=\"born\"\n            type=\"number\"\n            pattern=\"[0-9]{4}\"\n            placeholder=\"born year\"\n            required\n            onChange={this.handleNewPerson}\n          />\n\n          <input\n            name=\"died\"\n            type=\"number\"\n            pattern=\"[0-9]{4}\"\n            placeholder=\"died\"\n            required\n            onChange={this.handleNewPerson}\n          />\n\n          <input\n            name=\"father\"\n            type=\"text\"\n            placeholder=\"father\"\n            required\n            value={this.state.father}\n            onChange={this.handleNewPerson}\n          />\n\n          <select\n            name=\"father\"\n            value={this.state.father}\n            onChange={this.handleNewPerson}\n          >\n            {optionsOfFathers}\n          </select>\n\n          <input\n            name=\"mother\"\n            type=\"text\"\n            placeholder=\"mother\"\n            value={this.state.mother}\n            required\n            onChange={this.handleNewPerson}\n          />\n\n          <select\n            name=\"mother\"\n            value={this.state.mother}\n            onChange={this.handleNewPerson}\n          >\n            {optionsOfMathers}\n          </select>\n\n          <button type=\"submit\">Add New Person</button>\n        </form>\n\n        <p>\n          Name:\n          {this.state.name}\n          {' '}\n\n        </p>\n        <p>\n          Sex:\n          {this.state.sex}\n        </p>\n        <p>\n          Born:\n          {this.state.born}\n        </p>\n        <p>\n          Died:\n          {this.state.died}\n        </p>\n        <p>\n          Father:\n          {this.state.father}\n        </p>\n        <p>\n          Mother:\n          {this.state.mother}\n        </p>\n      </div>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  handleNewPersonSubmit: PropTypes.func.isRequired,\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default NewPerson;\n","const peoplePromice = () => fetch(\n  'https://mate-academy.github.io/react_people-table/api/people.json'\n)\n  .then(response => response.json());\n\nexport default peoplePromice;\n","import React from 'react';\nimport './PeopleTable.css';\nimport PeopleTable from './components/PeopleTable';\nimport NewPerson from './components/NewPerson';\nimport peoplePromice from './API_DATA';\n\nclass App extends React.Component {\n  state={\n    peopleFromServer: [],\n    people: [],\n    filterInputValue: '',\n    toggleNameSortOrder: 1,\n    personRowSelected: false,\n    personRowSelectedId: 0,\n    errorMessage: '',\n  }\n\n  async componentDidMount() {\n    const peopleFromServer = await peoplePromice();\n\n    const temp = this.addKeysToPersonInArr(peopleFromServer);\n\n    this.setState({\n      peopleFromServer: temp,\n      people: temp,\n    });\n  }\n\n  addKeysToPersonInArr = people => people\n    .map((person, personIndex, peopleArr) => ({\n      ...person,\n      id: personIndex + 1,\n      age: person.died - person.born,\n      century: this.getCentury(person.died),\n      children: this.getChildrenString(person, peopleArr),\n    }))\n\n  getCentury = died => (\n    Math.ceil(died / 100)\n  )\n\n  getChildrenString = (person, peopleArr) => (peopleArr\n    .filter(child => child.father === person.name\n      || child.mother === person.name)\n    .map(child => child.name)\n    .join(', ')\n  )\n\n  handleFilterInput = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      filterInputValue: value,\n    });\n  }\n\n  isArrIncludeSubstr = (str, substr) => {\n    str = str.join('');\n    substr = substr.trim();\n\n    if (str) {\n      return str.toLowerCase().includes(substr.toLowerCase());\n    }\n    return false;\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.setState(prevState => ({\n      people: prevState.peopleFromServer.filter(item => (\n        this.isArrIncludeSubstr(\n          [item.name, item.mother, item.father], prevState.filterInputValue\n        )\n      )),\n    }));\n  }\n\n  returnSortingFunction = (arr, sortKey, toggleSortOrder) => {\n    switch (typeof arr[0][sortKey]) {\n      case 'string':\n        console.log([sortKey], 'bugaga');\n        return (a, b) => toggleSortOrder * a[sortKey].localeCompare(b[sortKey]);\n\n      case 'number':\n        console.log(arr[0][sortKey], 'muahaha');\n        return (a, b) => toggleSortOrder * (a[sortKey] - b[sortKey]);\n\n      default:\n        return 0;\n    }\n  }\n\n  handleSort = (fieldName) => {\n    this.setState(prevState => ({\n      people: [...prevState.peopleFromServer]\n        .sort(this.returnSortingFunction(\n          [...prevState.peopleFromServer],\n          fieldName, prevState.toggleNameSortOrder\n        )),\n      toggleNameSortOrder: -prevState.toggleNameSortOrder,\n    }));\n  }\n\n  handlePersonRowClick = (personId) => {\n    this.setState({\n      personRowSelectedId: personId,\n    });\n\n    if (this.state.personRowSelectedId === personId) {\n      this.setState(prevState => ({\n        personRowSelected: !prevState.personRowSelected,\n      }));\n    } else if (this.state.personRowSelectedId !== personId) {\n      this.setState({\n        personRowSelected: true,\n      });\n    }\n  }\n\n  handleNewPersonSubmit = (event) => {\n    event.preventDefault();\n\n    const newPersonObj = {\n      name: event.target[0].value,\n      sex: event.target[1].checked ? 'f' : 'm',\n      born: event.target[3].value,\n      died: event.target[4].value,\n      mother: event.target[5].value,\n      father: event.target[6].value,\n    };\n\n    const age = newPersonObj.died - newPersonObj.born;\n\n    if (age <= 0 || age > 150) {\n      this.setState({\n        errorMessage: 'Incorrect Age, or to much or not enough',\n      });\n    } else {\n      this.setState(prevState => ({\n        errorMessage: '',\n        peopleFromServer:\n          this.addKeysToPersonInArr(\n            [...prevState.peopleFromServer, newPersonObj]\n          ),\n        people:\n          this.addKeysToPersonInArr([...prevState.people, newPersonObj]),\n      }));\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\nPeople table\n          {this.state.people.length}\n        </h1>\n        <h2>{this.state.errorMessage}</h2>\n\n        <NewPerson\n          handleNewPersonSubmit={this.handleNewPersonSubmit}\n          people={this.state.people}\n        />\n\n        <form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Filter by Name, Mother of Father\"\n            value={this.state.filterInputValue}\n            onChange={this.handleFilterInput}\n          />\n\n          <button type=\"submit\" className=\"button\">Filter</button>\n        </form>\n        <PeopleTable\n          people={this.state.people}\n          handleSort={this.handleSort}\n          handlePersonRowClick={this.handlePersonRowClick}\n          personRowSelectedId={this.state.personRowSelectedId}\n          personRowSelected={this.state.personRowSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}